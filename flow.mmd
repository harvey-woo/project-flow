sequenceDiagram
  participant 开发者
  participant 开发管理
  participant 版本控制
  participant 持续集成
  participant 测试服务
  participant 缺陷管理
  participant 测试者
  participant 运维
  participant 生产服务
  participant 包管理
  开发者->>版本控制: 在各自分支提交代码
  开发管理->>版本控制: code review，合并分支，并打[测试版本号]标签
  版本控制->>持续集成: hook通知
  持续集成->>版本控制: 拉取代码
  持续集成->>持续集成: 运行构建脚本
  持续集成->>持续集成: 运行自动化测试
  alt 构建或者测试失败
      持续集成->>开发管理: 通知通知开发者，退出流程
  end
  持续集成->>缺陷管理: 生成缺陷版本号
  持续集成->>测试服务: 将[测试版本号]构建好的代码发布到测试服务
  opt
      持续集成->>版本控制: hooks通知
      版本控制->>缺陷管理: 对比变更的结果，关闭对应的缺陷
      缺陷管理->>测试者: 通知修复状态
  end
  持续集成->>测试者: 提醒进行测试
  loop 测试
      测试者->>测试服务: 进行测试
      测试者->>缺陷管理: 记录缺陷
      缺陷管理->>开发者: 有bug啦
      开发者->>开发者: 修复缺陷
      开发者->>版本控制: 提交代码
      版本控制->>缺陷管理: 记录修复提交，并管理缺陷状态
  end
  测试者->>开发管理: 可以发布了
  开发管理->>版本控制: 合并[测试版本号]到主分支
  版本控制->>运维: hook提取changelog并通知运维发布
  运维->>持续集成: 触发发布
  持续集成->>版本控制: 拉取代码
  持续集成->>持续集成: 运行构建脚本
  持续集成->>生产服务: 将构建好的代码发布到生产服务
  持续集成->>包管理: 发布软件包
